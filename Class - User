package cal;

import java.util.ArrayList;
import java.util.HashMap;
import java.awt.List;

public class User {
	private static SQLHelper help = new SQLHelper();
	private static String username;
	private String url;
	
	private List iAreAdmin = new List();
	private List myGroups = new List();
	
	private ArrayList<Event> notifications_ev = new ArrayList<Event>();
	private ArrayList<String[]> notifications_gr = new ArrayList<String[]>();
	private HashMap<String, Event> myEvents = new HashMap<String, Event>();
	private static HashMap<String, Integer> copyOfMyEventsForFindingIfThereIsAnEvent = new HashMap<String, Integer>();

	public static void main(String[] args){
		User moshe = new User("Moshe");
		
		
	}
	
	User(String username){
		this.username = username;
		myEvents = initEvents();
		myGroups = (List) help.getGroups(username);;
		notifications_ev = help.getEventNotifications(username);
		notifications_gr = help.getGroupNotifications(username);
	}
	
	private static void putEventDatesIntoCopyOfMyEvents(String date){
		if(copyOfMyEventsForFindingIfThereIsAnEvent.containsKey(date)){
			int a = copyOfMyEventsForFindingIfThereIsAnEvent.get(date);
			copyOfMyEventsForFindingIfThereIsAnEvent.replace(date, a, a++);
		}
		else
			copyOfMyEventsForFindingIfThereIsAnEvent.put(date, 1);
	}
	
	private static HashMap<String, Event> initEvents(){
		ArrayList cur = help.getEvents(username),
				 temp = new ArrayList();	
		
		int numEvents = help.getNumberOfEventsByUser(username);
		HashMap<String, Event> these = new HashMap<String, Event>();
		Event event;
		String delimiter = help.getDelimiter();
		
		for(int i = 0; i < cur.size(); i++){
			if(!cur.get(i).equals(delimiter)){
				temp.add(cur.get(i));	
				if(i % 10 == 3)
					putEventDatesIntoCopyOfMyEvents((String) cur.get(i));
			}
			else{
				event = new Event(temp);
				temp = new ArrayList();
				
				these.put(event.getDateTime(), event);
				}
		}
		
		return these;
	}
	
	
	
	public String getUsername(){
		return username;
	}
	
	void addAdminRights(String groupName){
		iAreAdmin.add(groupName);
	}
	
	public boolean isAdmin(String groupName){
		int i = help.isUserAdmin(username);
		
		if (i == 1)
			return true;

		return false;
	}
	
	public void addUserToGroup(String groupName, int isAdmin){
		if(isAdmin != 0){
			SelfClosingMessage.output("You must enter a value of either 1 or 0 for \"isAdmin\"", "Warning!", 10000);
		}
		else{
		myGroups.add(groupName);
		help.addUserToGroup(username, groupName, isAdmin);
		}
	}
	
	public boolean isThereAnEventToday(String date){
		if (copyOfMyEventsForFindingIfThereIsAnEvent.containsKey(date))
			return true;
		
		return false;
	}
	
	/*
	 This method was taken out back and shot in the face. 
	 It's too much more efficient to get the date from
	 memory, rather than query to SQL that many times
	  
	public boolean isThereAnEventToday(String date){
		String query = "select * from theEvent where user_groupID = '"  
					+ username + "' and dateOfEvent = '" + date + "'";
		
		String result = help.query(query);
		
		for(int i = 0; i < result.length(); i++){
			if (result.charAt(i) != ' ')
				return true;	
		}
		
		return false;
	}*/
	
	public boolean equals(String username){
		return (username.equals(this.username));
	}
		
	public Event getEvent(String dateTime){
		return myEvents.get(dateTime);
	}
	
	public void deleteEvent(String dateTime){
		String date = dateTime.substring(0, 10),
				time = dateTime.substring(10, 12) + dateTime.substring(13, 15) + "00";
		
		help.deleteEvent(username, date, Integer.parseInt(time));
	}
	/*
	public void deleteNotification(Notification n){
		help.deleteNotification(n);
	}*/
}










