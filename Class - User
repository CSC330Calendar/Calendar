package cal;

import java.util.ArrayList;
import java.util.HashMap;
import java.awt.List;

public class User {
	private static SQLHelper help = new SQLHelper();
	private static String username;
	private String url;
	
	private List iAreAdmin = new List();
	private List myGroups = new List();
	private HashMap<String, Event> myEvents = new HashMap<String, Event>();
	
	User(String username){
		this.username = username;
		myEvents = initEvents();
		myGroups = initGroups();
	}
	
	public static void main(String[] args){
		User moshe = new User("Moshe");
		String date = "08/06/2017";
		
		System.out.println(date + " has event = " + moshe.isThereAnEventToday(date));
		

	}
	
	private static List initGroups(){
		return (List) help.getGroups(username);
	}
	
	private static HashMap<String, Event> initEvents(){
		ArrayList cur = help.getEvents(username),
				 temp = new ArrayList();	
		
		int numEvents = help.getNumberOfEventsByUser(username);
		HashMap<String, Event> these = new HashMap<String, Event>();
		Event event;
		String delimiter = help.getDelimiter();
		
		for(int i = 0; i < cur.size(); i++){
			if(!cur.get(i).equals(delimiter))
				temp.add(cur.get(i));
			else{
				event = new Event(temp);
				temp = new ArrayList();
				
				these.put(event.getDateTime(), event);
				}
		}
		
		return these;
	}
	
	public String getUsername(){
		return username;
	}
	
	void addAdminRights(String groupName){
		iAreAdmin.add(groupName);
	}
	
	public boolean isAdmin(String groupName){
		int i = help.isUserAdmin(username);
		
		if (i == 1)
			return true;

		return false;
	}
	
	public void addUserToGroup(String groupName){
		myGroups.add(groupName);
		ArrayList list = new ArrayList();
		list.add(help.getNumberOfElements("calGroup") + 1);
		list.add(username);
		list.add(groupName);
		list.add(0);
		
		help.insert("calgroup", list);
	}
	//^^add as regular user
	
	//vs add as admin:
	public void addUserToGroup(String groupName, int val){
		myGroups.add(groupName);
		help.insert("insert calgroup values (" + (help.getNumberOfElements("calGroup") + 1) + ", '" + username + "', '" + groupName + "', 1");
	}
	
	public boolean isThereAnEventToday(String date){
		String query = "select * from theEvent where user_groupID = '"  
					+ username + "' and dateOfEvent = '" + date + "'";
		
		String result = help.query(query);
		
		for(int i = 0; i < result.length(); i++){
			if (result.charAt(i) != ' ')
				return true;	
		}
		
		return false;
	}
	
	public boolean equals(String username){
		return (username.equals(this.username));
	}
		
	public Event getEvent(String dateTime){
		return myEvents.get(dateTime);
	}
	
	public void deleteEvent(String dateTime){
		String date = dateTime.substring(0, 10),
				time = dateTime.substring(10, 12) + dateTime.substring(13, 15) + "00";
		
		help.deleteEvent(username, date, Integer.parseInt(time));
	}
	
	public void deleteNotification(Notification n){
		help.deleteNotification(n);
	}
}










