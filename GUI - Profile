package CalendarTest;

import javax.imageio.IIOException;
import javax.imageio.ImageIO;
import javax.swing.*;
import javax.swing.event.*;
import javax.swing.table.*;
import javax.swing.Timer; 
import java.awt.*;
import java.awt.event.*;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.*;

public class Profile {
	
	static JFrame frmMain;
	static Container pane;
	static JPanel pnlProfile;
	static DefaultTableModel mtblFriends, mtblGroups;
	static JTable tblFriends, tblGroups;
	static JScrollPane stblFriends, stblGroups;
	static JLabel lblUsername, profilePic;
	static JButton btnMyCalendar, btnModifyEvents;
	static private String username;
	
	static private void prepareFrame(){
		
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (InstantiationException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IllegalAccessException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (UnsupportedLookAndFeelException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		String lcOSName = System.getProperty("os.name").toLowerCase();
		boolean IS_MAC = lcOSName.startsWith("mac os x");
		System.setProperty("apple.laf.useScreenMenuBar", String.valueOf(IS_MAC));
		
		//set-up frame
				frmMain = new JFrame("Group Calendar");
				frmMain.setSize(550,385);
				pane = frmMain.getContentPane();
				pane.setLayout(null);
				frmMain.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); //Close when X is clicked
	}
	static private void createControls() throws IOException{
		//create controls
				mtblFriends = new DefaultTableModel(){public boolean isCellEditable(int rowIndex, int mColIndex){return false;}};
				mtblGroups = new DefaultTableModel(){public boolean isCellEditable(int rowIndex, int mColIndex){return false;}};
				
				tblFriends = new JTable(mtblFriends);
				tblGroups = new JTable(mtblGroups);
				
				stblFriends = new JScrollPane(tblFriends);
				stblGroups = new JScrollPane(tblGroups);
				
				pnlProfile = new JPanel(null);
				
				btnMyCalendar = new JButton("My Calendar");
				btnModifyEvents = new JButton("Modify Events");
				
				//CALL METHOD TO GET USERNAME FROM DATABASE
				username = "BillGates"; // query
				lblUsername = new JLabel(username);
				
				//CALL METHOD TO GET IMAGE FROM DATABASE
				BufferedImage myPicture = ImageIO.read(new File("/Users/keiththompson/Downloads/src/edu/cuny/csi/csc330/j1f9DiJi_200x200.jpeg"));
				profilePic = new JLabel(new ImageIcon(myPicture));
	}
	static private void setBorder(){
		//set border
				pnlProfile.setBorder(BorderFactory.createTitledBorder("Profile" + "                                                                                                                         " + "Current Temperature: " + getTempByZip.getTemperature("10314") + "\u00B0 F"));
				
				//set color
				frmMain.getContentPane().setBackground(Color.BLUE);
	}
	static private void addControls(){
		//add controls to pane
				pane.add(pnlProfile);
				pnlProfile.add(stblFriends);
				pnlProfile.add(stblGroups);
				pnlProfile.add(lblUsername);
				pnlProfile.add(profilePic);
				pnlProfile.add(btnMyCalendar);
				pnlProfile.add(btnModifyEvents);
				frmMain.setJMenuBar(MenuExp.PrepareMenuBar());
	}
	static private void registerActionListeners(){
		//add action listeners
				btnMyCalendar.addActionListener(new btnMyCalendar_Action());
				btnModifyEvents.addActionListener(new btnModifyEvents_Action());
	}
	static private void setBounds(){
		//set bounds
		pnlProfile.setBounds(0,0,650,650);
		lblUsername.setBounds(75,15,100,50);
		stblGroups.setBounds(325,225,150,100);
		stblFriends.setBounds(75,225,150,100);
		profilePic.setBounds(325,45,150,150);
		btnMyCalendar.setBounds(75,80 ,100,50);
		btnModifyEvents.setBounds(75,150, 100,50);
	}
	static private void populateTables(){
		//All must be a method from a query for database
				tblFriends.setRowHeight(13);
				mtblFriends.setRowCount(6);
				mtblFriends.addColumn("Friends");
				
				mtblFriends.setValueAt("steveJobs",0,0);
				mtblFriends.setValueAt("alanTuring", 1, 0);
				mtblFriends.setValueAt("timCook",2,0);
				
				tblGroups.setRowHeight(13);
				mtblGroups.setRowCount(6);
				mtblGroups.addColumn("Groups");
				mtblGroups.setValueAt("CSC330", 0, 0);
				mtblGroups.setValueAt("JIG", 1, 0);
	}
	static private void makeFrameVisible(boolean decision){
		frmMain.setVisible(decision);
		frmMain.setResizable(false);
	}
	static private void backgroundProcesses(){}
	public static void paintFrame() throws IOException{
		prepareFrame();
		createControls();
		setBorder();
		addControls();
		registerActionListeners();
		setBounds();
		populateTables();
		makeFrameVisible(true);
		backgroundProcesses();
	}
	
	

	public static void main(String[] args) throws IOException {
	
		try {UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());}
		catch (ClassNotFoundException e) {}
		catch (InstantiationException e) {}
		catch (IllegalAccessException e) {}
		catch (UnsupportedLookAndFeelException e) {}
	
		paintFrame();
	}

	static class btnMyCalendar_Action implements ActionListener{
		public void actionPerformed(ActionEvent e){
			CalendarProgram.paintFrame();
			frmMain.repaint();
			frmMain.setVisible(false);
		}
	}
	
	static class btnModifyEvents_Action implements ActionListener{
		public void actionPerformed(ActionEvent e){
			
		}
	}
	
}
