package lab3;

import java.awt.List;
import java.sql.*;
import java.util.Arrays;
import java.util.Collections;

public class EaseOfSQL {
	private static Connection connection = null;
	private static Statement statement = null;
	private static ResultSet resultSet = null; 
	private static String queryResult;
	private static String eventId, eventNumber, eventDate, eventTime, eventDescription;
	//change this to your localhost's username and password
	private static String url = "jdbc:mysql://localhost/thecalendar?user=root&password=6815"; ;
		
	public static void main(){
		getEvent(1);
	}
	
	public static void closePath(){
		try {
			if(statement != null ) 
				statement.close(); 
			if(connection != null) 
				connection.close(); 
			if(resultSet != null) 
				resultSet.close(); 
		}
		catch(SQLException ex ) {} 
	}
	
	public static boolean queryUsernamePassword(String username, String password){
		String query = "select userpassword from theCalendar.friend where username = '" + username + "'";
		try {
			connection = DriverManager.getConnection(url);
			statement = connection.createStatement() ;
			resultSet = statement.executeQuery(query);

			while(resultSet.next())
				queryResult = resultSet.getString(1);
			
		}
		catch(SQLException ex ) {
			System.err.println("DB Exception: " + ex); 
		}
		finally {
			closePath();			
		}
		
		if (password.equals(queryResult))
			return true;
		else 
			return false;
		
	}
	
	public static String query(String query){
		List strings = new List();
		try {
			connection = DriverManager.getConnection(url);
			statement = connection.createStatement() ;
			resultSet = statement.executeQuery(query);
			
			int x = 1;
			
			while(resultSet.next()) {
				strings.add(resultSet.getString(x));
				queryResult = resultSet.getString(1); 
				x++;
				if (x == 3)
					x = 1;
			}
		}
		catch(SQLException ex ) {
			System.err.println("DB Exception: " + ex); 
		}
		finally {
			closePath();			
		}
		
		return queryResult;
	}
	
	public static void insert(String query){
		try {			
			connection = DriverManager.getConnection(url);
			statement = connection.createStatement() ;
			statement.execute(query);
		}
		catch(SQLException ex ) {
			System.err.println("DB Exception: " + ex); 
		}
		finally {
			closePath();
		}
	}
	
	public static void insertUsernamePassword(String username, String password){
		String query = "insert into thecalendar.friend values ('" + username +"', '" + password + "', 'URL')";
		try {			
			connection = DriverManager.getConnection(url);
			statement = connection.createStatement() ;
			statement.execute(query);
		}
		catch(SQLException ex ) {
			System.err.println("DB Exception: " + ex); 
		}
		finally {
			closePath();
		}
	}
	
	
	public static List getEvent(int evNum){
		List strings = new List();
		String query = "select * from theevent where eventNumber = " + evNum;
		
		try {
			connection = DriverManager.getConnection(url);
			statement = connection.createStatement() ;
			resultSet = statement.executeQuery(query);
			
			while(resultSet.next()) {
				eventId = resultSet.getString(1);
				eventNumber = resultSet.getString(2);
				eventDate = resultSet.getString(3);
				eventTime = resultSet.getString(4);
				eventDescription = resultSet.getString(5);
			}
		}
		catch(SQLException ex ) {
			System.err.println("DB Exception: " + ex); 
		}
		finally {
			closePath();			
		}

		strings.add(eventId);
		strings.add(eventNumber);
		strings.add(eventDate);
		strings.add(eventTime);
		strings.add(eventDescription);
		
		return strings;
	}
	
	public static List getGroups(String username){
		List groups = new List();
		String query = "select * from calGroup where username = '" + username + "'";
		try {
			connection = DriverManager.getConnection(url);
			statement = connection.createStatement() ;
			resultSet = statement.executeQuery(query);
			
			int i = 0;
			while(resultSet.next()) {
				groups.add(resultSet.getString(3));
				i++;
			}
		}
		catch(SQLException ex ) {
			System.err.println("DB Exception: " + ex); 
		}
		finally {
			closePath();			
		}

		return groups;
	}
	
	
	
}
